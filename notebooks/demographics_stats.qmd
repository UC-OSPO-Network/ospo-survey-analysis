---
title: "Demographics: descriptive statistics"
---

# Overview

Let's look at survey participation rates across various groups (demographics). These are mostly just basic descriptive statistics, though there are a couple plots and a z-test relating to aspiring vs. experienced contributors.

# Import packages and utilities
```{r}
project_root <- here::here() # requires that you be somewhere in the
# project directory (not above it)
# packages
suppressMessages(source(file.path(project_root, "scripts/packages.R")))
# functions and objects used across scripts
suppressMessages(source(file.path(project_root, "scripts/utils.R")))
```

# Load data

```{r}
other_quant <- load_qualtrics_data("clean_data/other_quant.tsv")
status <- load_qualtrics_data("clean_data/contributor_status_Q3.tsv")
qual <- load_qualtrics_data("qual_responses.tsv")

raw_data <- cbind(status, other_quant)
nrow(raw_data)
head(raw_data)
```

# Experienced vs aspiring

First, let's see how many experienced and aspiring open source contributors took the survey.

Experienced:
```{r}
total_expd <- nrow(subset(raw_data, Past=="True"))
total_expd
```

Aspiring:
```{r}
total_asp <- nrow(subset(raw_data, Past=="False" & Future=="True"))
total_asp
```

Filter out people who were neither past nor future contributors. We'll use this filtered data frame moving forward.
```{r}
# Filter duds
data <- raw_data %>%
    filter(!(Past == "" | Future == "")) %>%
    filter(!(Past == "False" & Future == "False"))
```

```{r}
status_data <- data %>%
  mutate(status = if_else(Past == "True", "Experienced", "Aspiring")) %>%
  select(job_category, status)

stat_sum <- data.frame(
  ftable(xtabs(~ job_category + status, data = status_data))
)
subset(stat_sum, status == "Aspiring") %>% arrange(desc(Freq))
subset(stat_sum, status == "Experienced") %>% arrange(desc(Freq))
```

Here we see that we have only 7 experienced undergraduate contributors and only 15 experienced postdocs.

## Experienced vs. aspiring by job: plot

Prepare data for plotting

```{r}
sj_counts <- status_data %>% group_by(job_category, status) %>% count()

# Reorder factor levels by the highest proportion of experienced contributors
ordered_jobs <- sj_counts %>%
  group_by(job_category) %>%
  summarise(
    Aspiring = n[status=="Aspiring"],
    Experienced = n[status=="Experienced"],
    .groups = "drop"
  ) %>%
  mutate(exp_to_asp = Experienced / Aspiring) %>%
  arrange(desc(exp_to_asp)) %>%
  pull(job_category)

sj_counts$job_category <- factor(sj_counts$job_category, levels = ordered_jobs)
```

Plot
```{r, fig.width=9, fig.height=8}
stack <- stacked_bar_chart(
  df = sj_counts,
  x_var = "job_category",
  y_var = "n",
  fill = "status",
  title = "Composition of job categories by experience")

stack
```


```{r}
save_plot("future_contribs_stack.tiff", 12, 9, p=stack)
```

```{r, fig.width=9, fig.height=8}
stack_prop <- stacked_bar_chart(
  df = sj_counts,
  x_var = "job_category",
  y_var = "n",
  ylabel = "Percent of Responses",
  fill = "status",
  title = "Composition of job categories by experience",
  proportional = TRUE)

stack_prop <- stack_prop +
  scale_y_continuous(labels = scales::percent)

stack_prop
```


```{r}
save_plot("future_contribs_stack_prop.tiff", 12, 9, p=stack_prop)
```

## Experienced vs. aspiring by job: stats

I think this might be easier to get a handle on if we combine some of these groups.
```{r}
sj_counts_relabeled <- sj_counts %>%
  mutate(
    job_category = case_when(
      job_category %in% c("Other research staff", "Post-Doc") ~
        "Post-docs and staff researchers",
      job_category %in% c("Grad Student", "Undergraduate") ~ "Students",
      TRUE ~ job_category
    )
  ) %>%
  group_by(job_category, status) %>%
  summarise(n = sum(n, na.rm = TRUE), .groups = "drop")


asp <- subset(sj_counts_relabeled, status == "Aspiring") %>% arrange(desc(n))
expd <- subset(sj_counts_relabeled, status == "Experienced") %>% arrange(desc(n))

asp
expd
```

Let's look at the proportions, which will make this even easier to see.

```{r}
sj_counts_prop <- sj_counts %>%
  ungroup() %>%                    # drop existing grouping
  group_by(job_category) %>%       # group only by job_category
  mutate(
    prop = n / sum(n),             # proportion, for statistics
    pct  = round(prop * 100, 1)    # percent, easier to read
  ) %>%
  ungroup()

subset(sj_counts_prop, status == "Aspiring")
```

Undergrads and grad students both have a lot of aspiring contributors--40ish%, twice as much the next highest proportion which is staff.

## Quick 2-proportion z-test

Can we do a quick z-test to check whether aspiring contributors make up a higher proportion of students than they do of nr staff, the next-highest proportion?

First, combine students for more statistical power. (Copying the code from previous cell, just on a relabeled data frame.)

```{r}
sj_counts_prop2 <- sj_counts_relabeled %>%
  ungroup() %>% 
  group_by(job_category) %>% 
  mutate(
    prop = n / sum(n), 
    pct  = round(prop * 100, 1)
  ) %>%
  ungroup()

subset(sj_counts_prop2, status == "Aspiring")
```

Let's start with a power analysis to see whether we have an adequate sample size. I could make this code more concise, but I'm sort of copy-pasting bits from other notebooks here.

```{r}
n_stud <- sum(subset(sj_counts_prop2, job_category == "Students")$n)
n_stud_asp <- subset(
  sj_counts_prop2,
  job_category == "Students" & status == "Aspiring"
)$n

n_staff <- sum(subset(sj_counts_prop2, job_category == "Non-research Staff")$n)
n_staff_asp <- subset(
  sj_counts_prop2,
  job_category == "Non-research Staff" & status == "Aspiring"
)$n

# Sanity check
n_stud
n_stud_asp
n_staff
n_staff_asp
```

```{r}
p_stud_asp <- n_stud_asp / n_stud
p_staff_asp <- n_staff_asp / n_staff

p_stud_asp
p_staff_asp
```

Calculate Cohen's h, the effect size.
```{r}
h <- pwr::ES.h(p_stud_asp, p_staff_asp)
```

Now, what ratio of students to nr staff is needed to achieve 80% power? This one-sided test allows us to specify our unequal group sizes.
```{r}
pwr::pwr.2p2n.test(
  h = h,
  n1 = n_stud,
  sig.level = 0.05,
  power = 0.8,
  alternative = "greater"
)
```

So we would need 46 nr staff to achieve 80% power.

```{r}
n_staff
```

We have 106!

Now proceed with the z-test.

```{r}
# Perform the one-sided prop test (testing if group1 > group2)
stats::prop.test(
  x = c(n_stud_asp, n_staff_asp),
  n = c(n_stud, n_staff),
  alternative = "greater",
)
```

Sweet. The difference in proportions is statistically significant, according to a simple z-test. 

# Campus

I already learned while plotting the data that UCSB and UCLA are overrepresented. What proportion of respondents came from these two schools?
```{r}
unique(data$campus)
```

First, a quick glance at the raw data to see how many non-UC respondents we got.

```{r}
nrow(raw_data)
nrow(
  subset(raw_data, campus != "I'm not affiliated with UC")
)
```

Only 2 respondents were not UC affiliates.

```{r}
campus_count <- data.frame(table(data$campus))
names(campus_count) <- c("Campus", "Count")
total <- sum(campus_count$Count)
ucsb <- subset(campus_count, Campus=="UC Santa Barbara")[,"Count"]
ucla <- subset(campus_count, Campus=="UC Los Angeles")[,"Count"]
ucsb + ucla
total
round((ucsb + ucla) / total * 100, digits = 1)
```

So 47% of respondents came from these two campuses.

# Field of study
How many respondents were from STEM, social science, and humanities?

```{r}
# Remove people who didn't answer this question--non-research staff
tmp <- data$field_of_study[nzchar(data$field_of_study)]
field_count <- data.frame(table(tmp))
names(field_count) <- c("Field", "Count")
total <- sum(field_count$Count)
stem <- sum(
  subset(
    field_count,
    Field == "Life sciences" |
    Field == "Math and CS" |
    Field == "Physical sciences"
  )[, "Count"]
)
sosc_hum <- sum(
  subset(
    field_count,
    Field == "Humanities" |
    Field == "Social sciences"
  )[, "Count"]
)
# sanity check
total == stem + sosc_hum
total
field_count
round(stem / total * 100, digits = 1)
round(sosc_hum / total * 100, digits = 1)
```

So 86% of respondents are from stem, and 14% are from social sciences/humanities.

How many of the STEM respondents are from math or CS?

```{r}
math_cs <- sum(
  subset(
    field_count,
    Field == "Math and CS"
  )[, "Count"]
)
round(math_cs / stem * 100, digits = 1)
```

53% of STEM respondents are from math or CS.

How many experienced contributors were from humanities or social sciences?

```{r}
nrow(subset(data, field_of_study=="Humanities" & Past =="True"))

nrow(subset(data, field_of_study=="Social sciences" & Past =="True"))
```

We had 4 experienced contributors from the humanities, and 10 from the social sciences. 

# Job category

```{r}
# Remove people who didn't answer this question--
# neither future nor past contributors
tmp <- data$job_category[nzchar(data$job_category)]
job_count <- data.frame(table(tmp))
names(job_count) <- c("Job", "Count")
total <- sum(job_count$Count)

nr_staff <- subset(job_count, Job == "Non-research Staff")[, "Count"]
academics <- sum(subset(job_count, Job != "Non-research Staff")[, "Count"])

job_count

round(nr_staff / total * 100, digits = 1)
round(academics / total * 100, digits = 1)
```

36% of survey respondents are non-research staff, while 64% are academics.

## Staff categories
What about the job areas of the non-research staff?

```{r}
# Remove everybody except non-research staff
tmp <- data$staff_categories[nzchar(data$staff_categories)]
staff_count <- data.frame(table(tmp))
names(staff_count) <- c("Area", "Count")
total <- sum(staff_count$Count)

staff_count

rs <- subset(staff_count, Area == "Academic and Research Support")[, "Count"]
it <- subset(staff_count, Area == "Information Technology (IT)")[, "Count"]

round( (rs + it) / total * 100, digits = 1)
```

67% of the non-research staff respondents were from either IT or Academic and Research Support, which we told participants "includes research administration, libraries, and instructional design".

# Qualitative responses: staff categories
Let's look at the free-response field for staff job categories. These are the non-research staff who selected "other" and wrote in their job area.

```{r}
qual_staff <- qual$staff_categories_13_TEXT[nzchar(qual$staff_categories_13_TEXT)]
```

I looked at these manually, but for the sake of data privacy, I am not printing the free responses here. I can see that the word "Library" and the abbreviation "IT" each occur multiple times. 

```{r}
length(qual_staff)
sum(str_count(qual_staff, pattern = "Library"))
sum(str_count(qual_staff, pattern = "IT"))
```

So, seven of the free-text responses contained either the word "Library" or "IT" or both. I am looking manually, and I can see that these came from 6 people. (One person put "Library IT".)

```{r}
sessionInfo()
```
