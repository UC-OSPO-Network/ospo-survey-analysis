---
title: "Solutions"
---

# Overview
This script makes some plots from Q10, which is about what solutions participants would find most useful.

# Import packages and utilities
```{r}
project_root <- here::here() # requires that you be somewhere in the
# project directory (not above it)
# packages
suppressMessages(source(file.path(project_root, "scripts/packages.R")))
# functions and objects used across scripts
suppressMessages(source(file.path(project_root, "scripts/utils.R")))
```

# Load data
```{r}
solutions <- load_qualtrics_data("clean_data/solutions_Q10.tsv")
other_quant <- load_qualtrics_data("clean_data/other_quant.tsv")
```

## Wrangle data
First, remove empty rows, i.e. rows from respondents who didn't receive this question. As with many questions in this survey, we can cut some corners in the code because the question was mandatory. For example, no need to worry about incomplete answers.
```{r}
nrow(solutions)
solutions <- exclude_empty_rows(solutions) # from scripts/utils.R
nrow(solutions)
```

Let's reshape the data from wide to long format for easier plotting later.
```{r}
long_data <- solutions %>%
  pivot_longer(
    cols = everything(),
    names_to = "solution",
    values_to = "utility"
  )

long_data <- long_data %>%
  mutate(
    utility_score = recode(
      utility,
      "Non-applicable" = 0L,
      "Not very useful" = 0L,
      "Useful" = 1L,
      "Very useful" = 2L
    )
  )
# Using interger literals 0L, 1L, etc., ensures that
# the new column will be integers, not doubles.

long_data
```

# Descriptive statistics
Next, let's calculate some simple descriptive statistics. I will choose:

- The total "score", that is, the total number of "points" a solution received (see scoring scheme in previous code chunk)
- The mean (which might be misleading if 0s drag it down, and also, who's to say what a 1.5 really means? Are the distances between the Likert points equal? We don't know.)
- The mode
- The standard deviation
```{r}
# Helper to compute the (numeric) mode
get_mode <- function(x) {
  ux <- unique(x)
  ux[which.max(tabulate(match(x, ux)))]
}

summary_df <- long_data %>%
  group_by(solution) %>%
  summarise(
    total  = sum(utility_score),
    mean   = mean(utility_score, na.rm = TRUE),
    mode   = get_mode(utility_score),
    st_dev = sd(utility_score, na.rm = TRUE)
  ) %>%
  ungroup()

# Order by highest total "score"
summary_df <- summary_df %>%
    arrange(desc(total))

summary_df
```

Cool. It looks like sustainability grants are by far the most popular, with assistance identifying funding sources and free computing environments in second and third place. These were the only three solutions that had a mode of 2.

Out of curiosity, how does it look when we order by variability?
```{r}
summary_df %>%
  arrange(desc(st_dev))
```

This analysis doesn't seem as interesting as it was for the challenges. Industy partnerships, Containerization, and Publicity all show high variance/stdev. These were also somewhat less popular.

Out of curiosity, how many people said they would all be very useful?
```{r}
nrow(
  solutions %>%
    filter(if_all(.cols = everything(), ~ . == "Very useful"))
)
```

Ah, ok. Not that many.

# Plot the distributions
Prepare data for plotting.
```{r}
ordered_levels <- (summary_df %>%
    arrange(desc(total)))$solution

long_data$solution <- factor(long_data$solution, levels = ordered_levels)
```

Grouped bar chart showing the distributions of answers.
```{r, fig.width=9, fig.height=6}
grouped_plot <- grouped_bar_chart(
  df = long_data,
  x_var = "solution",
  fill_var = "utility",
  title = "Preference for various open source solutions"
)

grouped_plot
```

Save the plot if you wish.
```{r}
save_plot("fave_solutions.tiff", 10, 6, p=grouped_plot)
```

# Simple bar plot
Now let's make a simpler bar plot from the next question, which asked participants to choose their favorite solution.
```{r}
favorites <- data.frame(other_quant$favorite_solution)
favorites <- exclude_empty_rows(favorites) # from scripts/utils.R

fav_to_plot <- data.frame(table(favorites[, 1]))
# from scripts/utils.R
fav_to_plot <- reorder_factor_by_column(
  df = fav_to_plot,
  factor_col = Var1,
  value_col = Freq,
  descending = FALSE
)
head(fav_to_plot)
```

```{r, fig.width=9, fig.height=6}
faves_plot <- basic_bar_chart(
  df = fav_to_plot,
  x_var = "Var1",
  y_var = "Freq",
  title = "Participant's favorite solution",
  show_axis_title_y = FALSE,
  ylabel = "Number of Respondents",
  show_bar_labels = TRUE,
  color_index = 7,
  horizontal = TRUE
)

faves_plot
```

The top solutions are not exactly the same in this question compared to tallying up the totals from the previous one, though they are close.

Save the plot if you wish.
```{r}
save_plot("fave_solutions_simple.tiff", 10, 6, p=faves_plot)
```

# Incorporating demographics

## Plots

Who are these people who want access to computing environments? Don't all the UCs already offer this?

Let's focus on job category. 
```{r}
campus_job_fave <- other_quant %>%
  select(campus, job_category, favorite_solution)
campus_job_fave <- exclude_empty_rows(campus_job_fave, strict = TRUE)

# For visual clarity, let's combine postdocs and other staff researchers.
campus_job_fave <- campus_job_fave %>%
  mutate(
    job_category = recode(
      job_category,
      "Post-Doc" = "Postdocs and\nStaff Researchers",
      "Other research staff" = "Postdocs and\nStaff Researchers"
    )
  )

head(campus_job_fave)
```

Of the people who selected "Computing environments", what is the distribution of job categories?
```{r}
compute <- campus_job_fave %>%
  filter(favorite_solution == "Computing environments")
compute_counts <- data.frame(table(compute$job_category))

compute_counts <- compute_counts %>% rename(job_category = Var1, compute = Freq)

compute_counts <- reorder_factor_by_column(
  df = compute_counts,
  factor_col = job_category,
  value_col = compute
)
```

```{r, fig.width=10, fig.height=8}
compute_bar <- basic_bar_chart(
  df = compute_counts,
  x_var = "job_category",
  y_var = "compute",
  title = "Respondents whose top choice was\n'Access to free, feature-rich computing environments'",
  color_index = 4,
  show_bar_labels = TRUE
)
compute_bar
```

Save the plot if you wish.
```{r}
save_plot("compute_job.tiff", 10, 10, p=compute_bar)
```

So those are the absolute numbers, but they don't normalize for the sample sizes of the different job categories. The number of non-research staff who voted for computing environments might be high because there are simply a lot of non-research staff in our survey.
```{r}
total_counts <- data.frame(table(campus_job_fave$job_category))

total_counts <- total_counts %>% rename(job_category = Var1, total = Freq)

proportion_df <- compute_counts %>%
  left_join(total_counts, by = "job_category") %>%
  mutate(proportion = round(compute / total, 2))

proportion_df
```

The previous plot suggested the demand was mostly coming from non-research staff, but that was deceiving, because we do indeed have a lot of non-research staff in our sample. Let's make a plot that is, I think, more informative. This plot shows the percent of people in that job category who selected computing environments as their favorite solution.
```{r, fig.width=10, fig.height=8}
compute_bar_prop <- basic_bar_chart(
  df = proportion_df,
  x_var = "job_category",
  y_var = "proportion",
  ylabel = "Percent of Job Category who Selected this Option",
  title = "Respondents whose top choice was\n'Access to free, feature-rich computing environments'",
  color_index = 4,
  show_bar_labels = TRUE,
  percent = TRUE
)
compute_bar_prop
```

Save the plot if you wish.
```{r}
save_plot("compute_job_prop.tiff", 10, 10, p=compute_bar_prop)
```

Let's make the same plot, but this time with campus info.

```{r}
compute_counts2 <- compute %>%
  select(-favorite_solution) %>%
  count(
    campus,
    job_category,
    name = "count"
  )

compute_counts2$job_category <- factor(
  compute_counts2$job_category,
  levels = levels(compute_counts$job_category)
)
```

```{r, fig.width=11, fig.height=11}
compute_campus_bar <- stacked_bar_chart(
  df = compute_counts2,
  x_var = "job_category",
  y_var = "count",
  fill = "campus",
  title = "Respondents who wanted\n'Access to free, feature-rich computing environments'",
  ylabel = NULL,
  proportional = FALSE
)

compute_campus_bar
```

This one is a bit harder to interpret, because it's a busy plot and the sample sizes are small. Anyway, save the plot if you wish.
```{r}
save_plot("compute_job_campus.tiff", 14, 14, p=compute_campus_bar)
```


## Response rates by campus, for "Compute environments"

I'm wondering if there's one or two campuses in particular where compute environments are lacking. 
```{r}
compute_counts_campus <- campus_job_fave %>%
  filter(favorite_solution == "Computing environments") %>%
  count(campus, name = "compute_n")

# a scalar
total_compute_votes <- nrow(campus_job_fave %>%
  filter(favorite_solution == "Computing environments"))
```
```{r}
campus_totals <- campus_job_fave %>%
  count(campus, name = "campus_total")

campus_totals <- left_join(campus_totals, compute_counts_campus, by="campus")
campus_totals <- exclude_empty_rows(campus_totals, strict=TRUE)

campus_totals %>% mutate( compute_perc = 100*compute_n / campus_total)
```

So, anywhere from 12% to 33% of respondents selected this as their favorite solution, when we break it down by campus. The numbers from UCSD (33%) and UC Merced (25%) should probably be taken with a grain of salt, since those campuses had really low participation rates.

## For each job category, what are the top 3 favorite solutions?

```{r}
job_fave <- campus_job_fave %>% select(-campus)
#Reorder factor levels for plotting
job_fave$job_category <- factor(job_fave$job_category, levels = c(
  "Faculty",
  "Postdocs and\nStaff Researchers",
  "Grad Student",
  "Undergraduate",
  "Non-research Staff"
))

job_fave_counts <- job_fave %>%
  count(
    job_category,
    favorite_solution,
    name = "count"
  )

# 2) For each job_category, keep only the top 3 solutions by count
top3_solutions <- job_fave_counts %>%
  group_by(job_category) %>%
  # slice_max() picks the rows with the highest `count`
  slice_max(order_by = count, n = 3, with_ties = TRUE) %>%
  ungroup()

top3_solutions
```

This looks like it's worth plotting. Let's go back to the big data frame, since my grouped_bar_chart function doesn't want counts (it will count rows itself); drop all job/solution combinations except those that appear in the top3_solutions data frame.
```{r}
job_fave_top3 <- job_fave %>%
  semi_join(
    top3_solutions,
    by = c("job_category", "favorite_solution")
  )

head(job_fave_top3)
```

```{r}
# Reorder factor levels so legend items are in order of appearance
job_fave_top3 <- job_fave_top3 %>%
  mutate(favorite_solution = fct_inorder(favorite_solution))
```

```{r, fig.width=9, fig.height=6}
top3_plot <- grouped_bar_chart(
  df = job_fave_top3,
  x_var = "job_category",
  fill_var = "favorite_solution",
  title = "Top three most popular solutions\nfor each job category",
  color_palette = rev(COLORS) #from utils.R
)
top3_plot
```

```{r}
save_plot("top3_solutions_by_job.tiff", 12, 10, p=top3_plot)
```

So, I think these are the takeaways:

- Dedicated grants for OS project sustainability is the most popular solution. This solution was in the top3 for all but undergrads.
- The other top solutions depend on how you look at the data. For non-research staff, the most popular solution is a learning community, though grants and access to free, feature-rich computing environments are close behind.
- I was surprised that access to computing environments was in second place. Upon inspection, this seems to be because this choice is popular among non-research staff, and we had a lot of non-research staff in our participant pool. About 12-33% of respondents said this was their top choice, depending on the campus.
- Undergraduates were the only group in which nobody selected grants as their top choice.
- Grad students and undergraduates were the only groups for whom a mentoring program was in their top 3. 
- Researchers and non-research staff have very distinct needs.

# Session Info
```{r}
sessionInfo()
```