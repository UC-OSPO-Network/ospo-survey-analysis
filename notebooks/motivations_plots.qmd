---
title: "Motivations for contributing to OS: plots"
---

# Overview
This script makes some plots from Q6, which is about participants' reasons for contributing to open source.

# Import packages and utilities
```{r}
project_root <- here::here() # requires that you be somewhere in the
# project directory (not above it)
# packages
suppressMessages(source(file.path(project_root, "scripts/packages.R")))
# functions and objects used across scripts
suppressMessages(source(file.path(project_root, "scripts/utils.R")))
```

# Define functions
```{r}
line_plot <- function(df, x_var, y_var, title) {
  p <- ggplot(df, aes(x = .data[[x_var]], y = .data[[y_var]])) +
    geom_point(size = 4) + # Adjust dot size
    scale_y_continuous(labels=scales::percent) +
    labs(
      title = title
    ) +
    theme(
      axis.title.x = element_blank(),
      axis.title.y = element_blank(),
      axis.text.x = element_text(angle = 60, vjust = 0.6, size = 24),
      axis.text.y = element_text(size = 24),
      axis.ticks.x = element_blank(),
      axis.ticks.y = element_blank(),
      legend.title = element_blank(),
      plot.title = element_text(hjust = 0.5, size = 24),
      plot.margin = unit(c(0.3, 0.3, 0.3, 0.3), "cm"),
      panel.grid = element_line(linetype = "solid", color = "gray90"),
      panel.background = element_blank()
    )
  return(p)
}
```


# Load data
```{r}
motivations <- load_qualtrics_data("clean_data/motivations_Q6.tsv")
other_quant <- load_qualtrics_data("clean_data/other_quant.tsv")
```

Wrangle into some handy data frames we'll use later. I'm pretty sure that all these cleaning steps are unnecessary, but they make me feel better.
```{r}
motivations_job_staff <- cbind(motivations, other_quant$job_category)
# Rename columns
names(motivations_job_staff)[length(names(motivations_job_staff))] <- "job_category"
motivations_job_staff <- cbind(motivations_job_staff, other_quant$staff_categories)
names(motivations_job_staff)[length(names(motivations_job_staff))] <- "staff_category"
head(motivations_job_staff)
# Remove any rows where the job_category or staff_category are missing
motivations_job_staff_clean <- exclude_empty_rows(motivations_job_staff, strict=TRUE)
# Remove rows of all 0s
motivations_job_staff_clean <- motivations_job_staff_clean %>%
  filter(!if_all(Job:Other, ~ .x == 0))
head(motivations_job_staff_clean)

# Do the same, but dropping staff categories (e.g. IT)
motivations_job <- subset(motivations_job_staff, select=-staff_category)
# Remove any rows where the job_category is missing
motivations_job_clean <- exclude_empty_rows(motivations_job, strict=TRUE)
# Remove rows of all 0s
motivations_job_clean <- motivations_job_clean %>%
  filter(!if_all(Job:Other, ~ .x == 0))
```

# Basic bar plot of contributor motivations
Sum up counts for each motivation.
```{r}
motivations_to_plot <- data.frame(
  Motivation = names(motivations),
  Count = unname(apply(motivations, 2, function(x) round(sum(x, na.rm = TRUE))))
)
head(motivations_to_plot)
```

Reorder factor levels based on count.
```{r}
motivations_to_plot <- motivations_to_plot %>%
  mutate(Motivation = fct_reorder(Motivation, Count, .desc = FALSE))
```

And make a plot, using a function in utils.R.
```{r, fig.width=9, fig.height=6}
myplot <- basic_bar_chart(motivations_to_plot,
  x_var = "Motivation",
  y_var = "Count",
  title = "Reasons for Contributing to Open Source",
  horizontal = TRUE,
  show_bar_labels = TRUE,
  show_ticks_y = FALSE,
  color_index = 3,
  show_axis_title_x = TRUE,
  show_axis_title_y = FALSE,
  show_grid = TRUE
)

myplot
```

Save the plot if you wish.
```{r}
save_plot("motivations_overall.tiff", 10, 6, p=myplot)
```

# Stacked bar plots of motivations by role
Now let's make some stacked bar plots of motivations by role (job category). We'll make two: one with the absolute number of responses, and one where all roles are normalized to 1, so we can see the relative proportions of each motivation.

For visual clarity, let's combine post-docs and other research staff into one category.
```{r}
counts_long <- motivations_job_clean %>%
  pivot_longer(
    cols      = -c(job_category),
    names_to  = "Motivation",
    values_to = "Value"
  ) %>%
  group_by(job_category, Motivation) %>%
    summarise(
      Count = sum(Value, na.rm = TRUE),
      .groups = "drop"
    )
counts_long
unique(counts_long$job_category)

big_counts_df <- counts_long %>%
  # lump Post-Doc & Other research staff together
  mutate(
    job_category = case_when(
      job_category %in% c("Post-Doc", "Other research staff") ~
        "Post-Docs and\nStaff Researchers",
      TRUE ~ job_category
    )
  ) %>%
  # re-group and sum up counts
  group_by(job_category, Motivation) %>%
  summarise(
    Count = sum(Count),
    .groups = "drop"
  )
big_counts_df
unique(big_counts_df$job_category)
```


Create a plot with the absolute number of responses on the y-axis.
```{r, fig.width=9, fig.height=8}
stacked_plot_raw <- stacked_bar_chart(big_counts_df,
  x_var = "job_category",
  y_var = "Count",
  fill = "Motivation",
  title = "Reasons for Contributing to Open Source",
)
stacked_plot_raw
```

Create another plot where all jobs are scaled to 1.
```{r, fig.width=9, fig.height=8}
stacked_plot_proportional <- stacked_bar_chart(big_counts_df,
  x_var = "job_category",
  y_var = "Count",
  fill = "Motivation",
  title = "Reasons for Contributing to Open Source",
  proportional = TRUE
)
stacked_plot_proportional
```

I like the proportional one better. I'll save it.
```{r}
save_plot("motivations_stacks.tiff", 12, 9, p=stacked_plot_proportional)
```

# IT vs. Academics
Request from Greg: What about IT vs. academics? (Students, Teachers, and Researchers)
```{r}
it <- motivations_job_staff_clean %>%
  filter(staff_category == "Information Technology (IT)")

it_counts <- it %>%
  pivot_longer(
    cols = -c(job_category, staff_category),
    names_to = "Motivation",
    values_to = "Value"
  ) %>%
  select(Motivation, Value) %>%
  group_by(Motivation) %>%
  summarise(
    Count = sum(Value, na.rm = TRUE),
    .groups = "drop"
  )
it_counts$Role <- "IT"

academics <- motivations_job_clean %>%
  filter(
    job_category %in%
      c(
        "Faculty",
        "Post-Doc",
        "Other research staff",
        "Grad Student",
        "Undergraduate"
      )
  )
acad_counts <- academics %>%
  pivot_longer(
    cols = -job_category,
    names_to = "Motivation",
    values_to = "Value"
  ) %>%
  select(Motivation, Value) %>%
  group_by(Motivation) %>%
  summarise(
    Count = sum(Value, na.rm = TRUE),
    .groups = "drop"
  )
acad_counts$Role <- "Academic"

it_academics <- rbind(it_counts, acad_counts)
it_academics
```

Plot
```{r}
stacked_plot_raw_it <- stacked_bar_chart(
  it_academics,
  x_var = "Role",
  y_var = "Count",
  fill = "Motivation",
  title = "Reasons for Contributing to Open Source",
)
```

```{r}
stacked_plot_proportional_it <- stacked_bar_chart(
  it_academics,
  x_var = "Role",
  y_var = "Count",
  fill = "Motivation",
  title = "Reasons for Contributing to Open Source",
  proportional = TRUE
)
```

Visualize
```{r, fig.width=9, fig.height=8}
stacked_plot_proportional_it
```

Save
```{r}
save_plot("motivations_stacks_it_academics.tiff", 8, 8, p=stacked_plot_proportional_it)
```


# Line plots for particular motivations

All 7 undergraduates selected "Skills" and "Give back" as motivations. This made me curious about whether these motivations decrease as we get older and advance in our careers. Let's make some line plots to investigate.
```{r}
# Drop staff categories (e.g. IT)
motivations_job <- subset(motivations_job_staff, select=-staff_category)
# Remove any rows where the job_category is missing
motivations_job_clean <- exclude_empty_rows(motivations_job, strict=TRUE)
# Remove rows of all 0s
motivations_job_clean <- motivations_job_clean %>%
  filter(!if_all(Job:Other, ~ .x == 0))

skills_by_role_grouped <- motivations_job_clean %>%
  group_by(job_category) %>%
  summarise(
    n_yes = sum(Skills == 1), # number of 1s
    n_tot = n(), # total rows
    Proportion = n_yes / n_tot
  )

skills_by_role_grouped <- skills_by_role_grouped %>%
  # Remove staff categories
  filter(!job_category %in% c("Non-research Staff", "Other research staff")) %>%
  # Keep only the relevant columns
  select(job_category, Proportion) %>%
  # Order the factor levels
  mutate(job_category = factor(job_category,
    levels = c(
      "Undergraduate",
      "Grad Student",
      "Post-Doc",
      "Faculty"
    ),
    ordered = TRUE
  )) %>%
  arrange(job_category)
```

Plot and visualize
```{r fig.width=9, fig.height=8}
skills_plot <- line_plot(skills_by_role_grouped,
x_var = "job_category",
y_var = "Proportion",
title = "Percent of Participants Motivated by\nDesire to Improve Their Skills"
)
skills_plot
```

Save
```{r}
save_plot("motivations_skill_by_role.tiff", 10, 8, p=skills_plot)
```

What about giving back?
```{r}
give_by_role_grouped <- motivations_job_clean %>%
  group_by(job_category) %>%
  summarise(
    n_yes = sum(`Give back` == 1), # number of 1s
    n_tot = n(), # total rows
    Proportion = n_yes / n_tot
  )

give_by_role_grouped <- give_by_role_grouped %>%
  # Remove staff categories
  filter(!job_category %in% c("Non-research Staff", "Other research staff")) %>%
  # Keep only the relevant columns
  select(job_category, Proportion) %>%
  # Order the factor levels
  mutate(job_category = factor(job_category,
    levels = c(
      "Undergraduate",
      "Grad Student",
      "Post-Doc",
      "Faculty"
    ),
    ordered = TRUE
  )) %>%
  arrange(job_category)
```

Plot and visualize
```{r fig.width=9, fig.height=8}
give_plot <- line_plot(give_by_role_grouped,
  x_var = "job_category",
  y_var = "Proportion",
  title = "Proportion of Participants Motivated by\nDesire to Give Back"
)
give_plot
```
Save
```{r}
save_plot("motivations_giveback_by_role.tiff", 8, 6, p=give_plot)
```

# Session Info

```{r}
sessionInfo()
```